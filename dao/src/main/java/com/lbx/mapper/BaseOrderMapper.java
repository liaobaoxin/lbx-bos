package com.lbx.mapper;

import com.lbx.domain.BaseOrder;
import com.lbx.domain.BaseOrderExample;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;

import java.util.List;

public interface BaseOrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    int countByExample(BaseOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    int deleteByExample(BaseOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    int insert(BaseOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    int insertSelective(BaseOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    List<BaseOrder> selectByExample(BaseOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    BaseOrder selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    int updateByExampleSelective(@Param("record") BaseOrder record, @Param("example") BaseOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    int updateByExample(@Param("record") BaseOrder record, @Param("example") BaseOrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    int updateByPrimaryKeySelective(BaseOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_order
     *
     * @mbggenerated Sun Mar 18 14:35:18 CST 2018
     */
    int updateByPrimaryKey(BaseOrder record);

    List<BaseOrder> conditionFind(String sql);

    Integer conditionFindCount(String sql);

    /**
     * 获取不重复的年份
     */
    @Select("SELECT YEAR(add_time) FROM base_order GROUP BY YEAR(add_time)")
    List<String> getDifferentYear();

    /**
     * 获取指定年份存在所有的月份
     */
    @Select("SELECT DISTINCT  DATE_FORMAT(add_time,'%m') FROM base_order WHERE is_delete='0' AND YEAR(add_time)=#{year} GROUP BY add_time;")
    List<String> getMonthByYear(String year);

    /**
     * 查找指定年月存在的天数
     * @param yearMonth
     * @return
     */
    @Select("SELECT DATE_FORMAT(add_time,'%d') FROM base_order WHERE is_delete='0' AND DATE_FORMAT(add_time,'%Y-%m')=#{yearMonth} GROUP BY add_time;")
    List<String> getDayByYearAndMonth(String yearMonth);


    /**
     * 查找指定年月日的数据
     * @param yearMonthDay
     * @return
     */
    @Select("SELECT * FROM base_order WHERE is_delete='0' AND DATE_FORMAT(add_time,'%Y-%m-%d')=#{yearMonthDay} GROUP BY add_time;")
    @ResultMap(value = "BaseResultMap")
    List<BaseOrder> getBaseOrderByYearAndMonthAndDay(String yearMonthDay);
}